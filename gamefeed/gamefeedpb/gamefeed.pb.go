// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gamefeed/gamefeedpb/gamefeed.proto

package gamefeedpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameFeedInput struct {
	Site                 string   `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	Platform             string   `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Template             string   `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	Env                  string   `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Brand                string   `protobuf:"bytes,6,opt,name=brand,proto3" json:"brand,omitempty"`
	State                string   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Geo                  string   `protobuf:"bytes,8,opt,name=geo,proto3" json:"geo,omitempty"`
	Version              string   `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Os                   string   `protobuf:"bytes,10,opt,name=os,proto3" json:"os,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameFeedInput) Reset()         { *m = GameFeedInput{} }
func (m *GameFeedInput) String() string { return proto.CompactTextString(m) }
func (*GameFeedInput) ProtoMessage()    {}
func (*GameFeedInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{0}
}

func (m *GameFeedInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameFeedInput.Unmarshal(m, b)
}
func (m *GameFeedInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameFeedInput.Marshal(b, m, deterministic)
}
func (m *GameFeedInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameFeedInput.Merge(m, src)
}
func (m *GameFeedInput) XXX_Size() int {
	return xxx_messageInfo_GameFeedInput.Size(m)
}
func (m *GameFeedInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GameFeedInput.DiscardUnknown(m)
}

var xxx_messageInfo_GameFeedInput proto.InternalMessageInfo

func (m *GameFeedInput) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *GameFeedInput) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *GameFeedInput) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *GameFeedInput) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

func (m *GameFeedInput) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *GameFeedInput) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *GameFeedInput) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GameFeedInput) GetGeo() string {
	if m != nil {
		return m.Geo
	}
	return ""
}

func (m *GameFeedInput) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GameFeedInput) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

type GameFeed struct {
	Id                   int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform             string          `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	SiteDomain           string          `protobuf:"bytes,3,opt,name=site_domain,json=siteDomain,proto3" json:"site_domain,omitempty"`
	Version              string          `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Name                 string          `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description          string          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Template             string          `protobuf:"bytes,7,opt,name=template,proto3" json:"template,omitempty"`
	GameCategory         []*GameCategory `protobuf:"bytes,8,rep,name=game_category,json=gameCategory,proto3" json:"game_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GameFeed) Reset()         { *m = GameFeed{} }
func (m *GameFeed) String() string { return proto.CompactTextString(m) }
func (*GameFeed) ProtoMessage()    {}
func (*GameFeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{1}
}

func (m *GameFeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameFeed.Unmarshal(m, b)
}
func (m *GameFeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameFeed.Marshal(b, m, deterministic)
}
func (m *GameFeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameFeed.Merge(m, src)
}
func (m *GameFeed) XXX_Size() int {
	return xxx_messageInfo_GameFeed.Size(m)
}
func (m *GameFeed) XXX_DiscardUnknown() {
	xxx_messageInfo_GameFeed.DiscardUnknown(m)
}

var xxx_messageInfo_GameFeed proto.InternalMessageInfo

func (m *GameFeed) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameFeed) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *GameFeed) GetSiteDomain() string {
	if m != nil {
		return m.SiteDomain
	}
	return ""
}

func (m *GameFeed) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GameFeed) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GameFeed) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GameFeed) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *GameFeed) GetGameCategory() []*GameCategory {
	if m != nil {
		return m.GameCategory
	}
	return nil
}

type GameCategory struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	DisplayOrder         int32    `protobuf:"varint,5,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	GamepodSize          string   `protobuf:"bytes,6,opt,name=gamepod_size,json=gamepodSize,proto3" json:"gamepod_size,omitempty"`
	IconUrl              string   `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	AbsIconUrl           string   `protobuf:"bytes,8,opt,name=abs_icon_url,json=absIconUrl,proto3" json:"abs_icon_url,omitempty"`
	TemplateId           int32    `protobuf:"varint,9,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Game                 []*Game  `protobuf:"bytes,10,rep,name=game,proto3" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameCategory) Reset()         { *m = GameCategory{} }
func (m *GameCategory) String() string { return proto.CompactTextString(m) }
func (*GameCategory) ProtoMessage()    {}
func (*GameCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{2}
}

func (m *GameCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCategory.Unmarshal(m, b)
}
func (m *GameCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCategory.Marshal(b, m, deterministic)
}
func (m *GameCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCategory.Merge(m, src)
}
func (m *GameCategory) XXX_Size() int {
	return xxx_messageInfo_GameCategory.Size(m)
}
func (m *GameCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCategory.DiscardUnknown(m)
}

var xxx_messageInfo_GameCategory proto.InternalMessageInfo

func (m *GameCategory) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GameCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GameCategory) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GameCategory) GetDisplayOrder() int32 {
	if m != nil {
		return m.DisplayOrder
	}
	return 0
}

func (m *GameCategory) GetGamepodSize() string {
	if m != nil {
		return m.GamepodSize
	}
	return ""
}

func (m *GameCategory) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *GameCategory) GetAbsIconUrl() string {
	if m != nil {
		return m.AbsIconUrl
	}
	return ""
}

func (m *GameCategory) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *GameCategory) GetGame() []*Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type Game struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameCode             string   `protobuf:"bytes,2,opt,name=game_code,json=gameCode,proto3" json:"game_code,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Provider             string   `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	HasFun               bool     `protobuf:"varint,5,opt,name=has_fun,json=hasFun,proto3" json:"has_fun,omitempty"`
	AspectRatio          string   `protobuf:"bytes,6,opt,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty"`
	JackpotCode          string   `protobuf:"bytes,7,opt,name=jackpot_code,json=jackpotCode,proto3" json:"jackpot_code,omitempty"`
	DisplayOrder         int32    `protobuf:"varint,8,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	IsFeatured           bool     `protobuf:"varint,9,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"`
	IsNew                bool     `protobuf:"varint,10,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	BetLimit             string   `protobuf:"bytes,11,opt,name=bet_limit,json=betLimit,proto3" json:"bet_limit,omitempty"`
	BannedLocation       []string `protobuf:"bytes,12,rep,name=banned_location,json=bannedLocation,proto3" json:"banned_location,omitempty"`
	GameClient           string   `protobuf:"bytes,13,opt,name=game_client,json=gameClient,proto3" json:"game_client,omitempty"`
	Subgame              string   `protobuf:"bytes,14,opt,name=subgame,proto3" json:"subgame,omitempty"`
	Tableid              int32    `protobuf:"varint,15,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Visibility           bool     `protobuf:"varint,16,opt,name=visibility,proto3" json:"visibility,omitempty"`
	Paylines             string   `protobuf:"bytes,17,opt,name=paylines,proto3" json:"paylines,omitempty"`
	Theme                []string `protobuf:"bytes,18,rep,name=theme,proto3" json:"theme,omitempty"`
	Img                  string   `protobuf:"bytes,19,opt,name=img,proto3" json:"img,omitempty"`
	ImgSquare            string   `protobuf:"bytes,20,opt,name=img_square,json=imgSquare,proto3" json:"img_square,omitempty"`
	S3Img                string   `protobuf:"bytes,21,opt,name=s3_img,json=s3Img,proto3" json:"s3_img,omitempty"`
	S3ImgSquare          string   `protobuf:"bytes,22,opt,name=s3_img_square,json=s3ImgSquare,proto3" json:"s3_img_square,omitempty"`
	Ribbon               []string `protobuf:"bytes,23,rep,name=ribbon,proto3" json:"ribbon,omitempty"`
	Jackpot              string   `protobuf:"bytes,24,opt,name=jackpot,proto3" json:"jackpot,omitempty"`
	SubProvider          string   `protobuf:"bytes,25,opt,name=sub_provider,json=subProvider,proto3" json:"sub_provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{3}
}

func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (m *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(m, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Game) GetGameCode() string {
	if m != nil {
		return m.GameCode
	}
	return ""
}

func (m *Game) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Game) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Game) GetHasFun() bool {
	if m != nil {
		return m.HasFun
	}
	return false
}

func (m *Game) GetAspectRatio() string {
	if m != nil {
		return m.AspectRatio
	}
	return ""
}

func (m *Game) GetJackpotCode() string {
	if m != nil {
		return m.JackpotCode
	}
	return ""
}

func (m *Game) GetDisplayOrder() int32 {
	if m != nil {
		return m.DisplayOrder
	}
	return 0
}

func (m *Game) GetIsFeatured() bool {
	if m != nil {
		return m.IsFeatured
	}
	return false
}

func (m *Game) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *Game) GetBetLimit() string {
	if m != nil {
		return m.BetLimit
	}
	return ""
}

func (m *Game) GetBannedLocation() []string {
	if m != nil {
		return m.BannedLocation
	}
	return nil
}

func (m *Game) GetGameClient() string {
	if m != nil {
		return m.GameClient
	}
	return ""
}

func (m *Game) GetSubgame() string {
	if m != nil {
		return m.Subgame
	}
	return ""
}

func (m *Game) GetTableid() int32 {
	if m != nil {
		return m.Tableid
	}
	return 0
}

func (m *Game) GetVisibility() bool {
	if m != nil {
		return m.Visibility
	}
	return false
}

func (m *Game) GetPaylines() string {
	if m != nil {
		return m.Paylines
	}
	return ""
}

func (m *Game) GetTheme() []string {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *Game) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *Game) GetImgSquare() string {
	if m != nil {
		return m.ImgSquare
	}
	return ""
}

func (m *Game) GetS3Img() string {
	if m != nil {
		return m.S3Img
	}
	return ""
}

func (m *Game) GetS3ImgSquare() string {
	if m != nil {
		return m.S3ImgSquare
	}
	return ""
}

func (m *Game) GetRibbon() []string {
	if m != nil {
		return m.Ribbon
	}
	return nil
}

func (m *Game) GetJackpot() string {
	if m != nil {
		return m.Jackpot
	}
	return ""
}

func (m *Game) GetSubProvider() string {
	if m != nil {
		return m.SubProvider
	}
	return ""
}

type GameFeedRequest struct {
	GameFeedInput        *GameFeedInput `protobuf:"bytes,1,opt,name=game_feed_input,json=gameFeedInput,proto3" json:"game_feed_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GameFeedRequest) Reset()         { *m = GameFeedRequest{} }
func (m *GameFeedRequest) String() string { return proto.CompactTextString(m) }
func (*GameFeedRequest) ProtoMessage()    {}
func (*GameFeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{4}
}

func (m *GameFeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameFeedRequest.Unmarshal(m, b)
}
func (m *GameFeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameFeedRequest.Marshal(b, m, deterministic)
}
func (m *GameFeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameFeedRequest.Merge(m, src)
}
func (m *GameFeedRequest) XXX_Size() int {
	return xxx_messageInfo_GameFeedRequest.Size(m)
}
func (m *GameFeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameFeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameFeedRequest proto.InternalMessageInfo

func (m *GameFeedRequest) GetGameFeedInput() *GameFeedInput {
	if m != nil {
		return m.GameFeedInput
	}
	return nil
}

type GameFeedResponse struct {
	GameFeed             []*GameFeed `protobuf:"bytes,1,rep,name=game_feed,json=gameFeed,proto3" json:"game_feed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GameFeedResponse) Reset()         { *m = GameFeedResponse{} }
func (m *GameFeedResponse) String() string { return proto.CompactTextString(m) }
func (*GameFeedResponse) ProtoMessage()    {}
func (*GameFeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f55256e6be62e9, []int{5}
}

func (m *GameFeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameFeedResponse.Unmarshal(m, b)
}
func (m *GameFeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameFeedResponse.Marshal(b, m, deterministic)
}
func (m *GameFeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameFeedResponse.Merge(m, src)
}
func (m *GameFeedResponse) XXX_Size() int {
	return xxx_messageInfo_GameFeedResponse.Size(m)
}
func (m *GameFeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameFeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameFeedResponse proto.InternalMessageInfo

func (m *GameFeedResponse) GetGameFeed() []*GameFeed {
	if m != nil {
		return m.GameFeed
	}
	return nil
}

func init() {
	proto.RegisterType((*GameFeedInput)(nil), "gamefeed.GameFeedInput")
	proto.RegisterType((*GameFeed)(nil), "gamefeed.GameFeed")
	proto.RegisterType((*GameCategory)(nil), "gamefeed.GameCategory")
	proto.RegisterType((*Game)(nil), "gamefeed.Game")
	proto.RegisterType((*GameFeedRequest)(nil), "gamefeed.GameFeedRequest")
	proto.RegisterType((*GameFeedResponse)(nil), "gamefeed.GameFeedResponse")
}

func init() { proto.RegisterFile("gamefeed/gamefeedpb/gamefeed.proto", fileDescriptor_11f55256e6be62e9) }

var fileDescriptor_11f55256e6be62e9 = []byte{
	// 864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xcd, 0x72, 0xe4, 0x34,
	0x10, 0x26, 0xf3, 0x93, 0xf1, 0xf4, 0xcc, 0x24, 0x41, 0xec, 0x26, 0x4a, 0x28, 0xc8, 0x60, 0x0e,
	0xe4, 0xb4, 0x5b, 0x95, 0x1c, 0x39, 0x50, 0x45, 0xa8, 0x50, 0xa9, 0xda, 0x02, 0xca, 0x29, 0x38,
	0x70, 0x71, 0xc9, 0x76, 0xc7, 0x11, 0xd8, 0x96, 0x57, 0x92, 0x67, 0x6b, 0xf6, 0xc4, 0x63, 0xf1,
	0x12, 0x3c, 0x0c, 0x6f, 0x40, 0xb5, 0x24, 0x4f, 0x26, 0x4c, 0x76, 0x6f, 0xfa, 0xbe, 0xb6, 0xe4,
	0xaf, 0xbf, 0x6e, 0xb5, 0x20, 0x2e, 0x45, 0x8d, 0xf7, 0x88, 0xc5, 0xeb, 0x7e, 0xd1, 0x66, 0x9b,
	0xe5, 0xab, 0x56, 0x2b, 0xab, 0x58, 0xd4, 0xe3, 0xf8, 0xdf, 0x3d, 0x58, 0xfc, 0x28, 0x6a, 0xbc,
	0x41, 0x2c, 0x6e, 0x9b, 0xb6, 0xb3, 0x8c, 0xc1, 0xc8, 0x48, 0x8b, 0x7c, 0x6f, 0xb9, 0x77, 0x31,
	0x4d, 0xdc, 0x9a, 0x9d, 0x41, 0xd4, 0x56, 0xc2, 0xde, 0x2b, 0x5d, 0xf3, 0x81, 0xe3, 0x37, 0x98,
	0x62, 0x16, 0x6b, 0x82, 0xc8, 0x87, 0x3e, 0xd6, 0x63, 0x76, 0x04, 0x43, 0x6c, 0x56, 0x7c, 0xe4,
	0x68, 0x5a, 0xd2, 0xd7, 0x79, 0xa7, 0x35, 0x36, 0xf9, 0x9a, 0x8f, 0xfd, 0xd7, 0x3d, 0x66, 0x2f,
	0x60, 0x9c, 0x69, 0xd1, 0x14, 0x7c, 0xdf, 0x05, 0x3c, 0x20, 0xd6, 0x58, 0x3a, 0x7c, 0xe2, 0x59,
	0x07, 0xe8, 0xe4, 0x12, 0x15, 0x8f, 0xfc, 0xc9, 0x25, 0x2a, 0xc6, 0x61, 0xb2, 0x42, 0x6d, 0xa4,
	0x6a, 0xf8, 0xd4, 0xb1, 0x3d, 0x64, 0x07, 0x30, 0x50, 0x86, 0x83, 0x23, 0x07, 0xca, 0xc4, 0x7f,
	0x0d, 0x20, 0xea, 0x73, 0xa6, 0xa0, 0x2c, 0x5c, 0xb2, 0xe3, 0x64, 0x20, 0x8b, 0x8f, 0xa6, 0x7a,
	0x0e, 0x33, 0xb2, 0x23, 0x2d, 0x54, 0x2d, 0x64, 0x13, 0xb2, 0x05, 0xa2, 0x7e, 0x70, 0xcc, 0xb6,
	0x86, 0xd1, 0x53, 0x0d, 0x0c, 0x46, 0x8d, 0xa8, 0x31, 0xe4, 0xec, 0xd6, 0x6c, 0x09, 0xb3, 0x02,
	0x4d, 0xae, 0x65, 0x6b, 0x69, 0x87, 0xcf, 0x7a, 0x9b, 0x7a, 0xe2, 0xed, 0xe4, 0x7f, 0xde, 0x7e,
	0x0b, 0x0b, 0xaa, 0x62, 0x9a, 0x0b, 0x8b, 0xa5, 0xd2, 0x6b, 0x1e, 0x2d, 0x87, 0x17, 0xb3, 0xcb,
	0xe3, 0x57, 0x9b, 0x5a, 0x53, 0x8e, 0xd7, 0x21, 0x9a, 0xcc, 0xcb, 0x2d, 0x14, 0xff, 0x3d, 0x80,
	0xf9, 0x76, 0x78, 0xc7, 0x86, 0x5e, 0xef, 0xe0, 0xc3, 0x7a, 0x87, 0xbb, 0x7a, 0x3f, 0x9c, 0xff,
	0xd7, 0xb0, 0x28, 0xa4, 0x69, 0x2b, 0xb1, 0x4e, 0x95, 0x2e, 0x50, 0x3b, 0x23, 0xc6, 0xc9, 0x3c,
	0x90, 0x3f, 0x13, 0xc7, 0xbe, 0x02, 0xa7, 0xb2, 0x55, 0x45, 0x6a, 0xe4, 0x7b, 0xec, 0x1d, 0x09,
	0xdc, 0x9d, 0x7c, 0x8f, 0xec, 0x14, 0x22, 0x99, 0xab, 0x26, 0xed, 0x74, 0x15, 0x1c, 0x99, 0x10,
	0xfe, 0x55, 0x57, 0x6c, 0x09, 0x73, 0x91, 0x99, 0x74, 0x13, 0xf6, 0xbd, 0x01, 0x22, 0x33, 0xb7,
	0xe1, 0x8b, 0x73, 0x98, 0xf5, 0xf6, 0xa5, 0xb2, 0x70, 0x6d, 0x32, 0x4e, 0xa0, 0xa7, 0x6e, 0x0b,
	0x16, 0xc3, 0x88, 0x7e, 0xc6, 0xc1, 0x59, 0x79, 0xf0, 0xd4, 0xca, 0xc4, 0xc5, 0xe2, 0x7f, 0xc6,
	0x30, 0x22, 0xb8, 0x63, 0xd9, 0xe7, 0x30, 0xf5, 0x05, 0x51, 0x45, 0xef, 0x9b, 0xbb, 0x67, 0xd7,
	0xaa, 0xc0, 0x8d, 0x9f, 0xc3, 0x2d, 0x3f, 0xa9, 0xd5, 0xb4, 0x5a, 0x49, 0xb2, 0x63, 0x14, 0x5a,
	0x2d, 0x60, 0x76, 0x02, 0x93, 0x07, 0x61, 0xd2, 0xfb, 0xae, 0x71, 0x4e, 0x45, 0xc9, 0xfe, 0x83,
	0x30, 0x37, 0x5d, 0x43, 0x1e, 0x09, 0xd3, 0x62, 0x6e, 0x53, 0x2d, 0xac, 0x54, 0xbd, 0x47, 0x9e,
	0x4b, 0x88, 0xa2, 0x4f, 0xfe, 0x10, 0xf9, 0x9f, 0xad, 0xb2, 0x5e, 0x8b, 0xf7, 0x69, 0x16, 0x38,
	0x27, 0x67, 0xa7, 0x1c, 0xd1, 0x33, 0xe5, 0x38, 0x87, 0x99, 0x34, 0xe9, 0x3d, 0x0a, 0xdb, 0x69,
	0xf4, 0x76, 0x45, 0x09, 0x48, 0x73, 0x13, 0x18, 0xf6, 0x12, 0xf6, 0xa5, 0x49, 0x1b, 0x7c, 0xe7,
	0x2e, 0x57, 0x94, 0x8c, 0xa5, 0xf9, 0x09, 0xdf, 0x91, 0x11, 0x19, 0xda, 0xb4, 0x92, 0xb5, 0xb4,
	0x7c, 0xe6, 0x13, 0xcb, 0xd0, 0xbe, 0x21, 0xcc, 0xbe, 0x81, 0xc3, 0x4c, 0x34, 0x0d, 0x16, 0x69,
	0xa5, 0x72, 0xe1, 0x1a, 0x69, 0xbe, 0x1c, 0x5e, 0x4c, 0x93, 0x03, 0x4f, 0xbf, 0x09, 0x2c, 0xfd,
	0xdd, 0xdb, 0x59, 0x49, 0x6c, 0x2c, 0x5f, 0xf8, 0x6a, 0x3a, 0x43, 0x1d, 0x43, 0xcd, 0x66, 0xba,
	0xcc, 0xd5, 0xeb, 0xc0, 0x77, 0x42, 0x80, 0x14, 0xb1, 0x22, 0xab, 0x50, 0x16, 0xfc, 0xd0, 0xe5,
	0xd5, 0x43, 0xf6, 0x25, 0xc0, 0x4a, 0x1a, 0x99, 0xc9, 0x4a, 0xda, 0x35, 0x3f, 0xf2, 0x19, 0x3d,
	0x32, 0xae, 0x24, 0x62, 0x5d, 0xc9, 0x06, 0x0d, 0xff, 0x34, 0x94, 0x24, 0x60, 0x1a, 0x44, 0xf6,
	0x01, 0x6b, 0xe4, 0xcc, 0xe9, 0xf5, 0x80, 0x06, 0x91, 0xac, 0x4b, 0xfe, 0x99, 0x1f, 0x44, 0xb2,
	0x2e, 0xd9, 0x17, 0x00, 0xb2, 0x2e, 0x53, 0xf3, 0xb6, 0x13, 0x1a, 0xf9, 0x0b, 0x17, 0x98, 0xca,
	0xba, 0xbc, 0x73, 0x04, 0x99, 0x66, 0xae, 0x52, 0xda, 0xf3, 0x32, 0x0c, 0xb4, 0xab, 0xdb, 0xba,
	0x64, 0x31, 0x2c, 0x3c, 0xdd, 0x6f, 0x3c, 0xf6, 0x55, 0x73, 0xd1, 0xb0, 0xf5, 0x18, 0xf6, 0xb5,
	0xcc, 0x32, 0xd5, 0xf0, 0x13, 0x27, 0x21, 0x20, 0xca, 0x37, 0x14, 0x97, 0x73, 0xef, 0x44, 0x80,
	0xd4, 0x0a, 0xa6, 0xcb, 0xd2, 0x4d, 0x9b, 0x9d, 0x86, 0x43, 0xbb, 0xec, 0x97, 0x40, 0xc5, 0x09,
	0x1c, 0xf6, 0xc3, 0x30, 0xc1, 0xb7, 0x1d, 0x1a, 0xcb, 0xbe, 0x83, 0x43, 0x67, 0x3d, 0xb5, 0x7e,
	0x2a, 0xe9, 0x55, 0x70, 0x6d, 0x3e, 0xbb, 0x3c, 0x79, 0x7a, 0x23, 0x36, 0x8f, 0x46, 0xe2, 0x46,
	0xd1, 0x06, 0xc6, 0xd7, 0x70, 0xf4, 0x78, 0xa6, 0x69, 0x55, 0x63, 0x90, 0xbd, 0x0e, 0xd7, 0x83,
	0x76, 0xf3, 0x3d, 0x77, 0xc1, 0xd8, 0xee, 0x71, 0xfe, 0xca, 0xd0, 0xea, 0xf2, 0xb7, 0x47, 0x61,
	0x77, 0xa8, 0x57, 0x32, 0x47, 0x76, 0xbd, 0x35, 0xb8, 0x4f, 0x9f, 0xd9, 0xec, 0xf5, 0x9f, 0x9d,
	0x3d, 0x17, 0xf2, 0x32, 0xe2, 0x4f, 0xbe, 0x9f, 0xff, 0x0e, 0x8f, 0x2f, 0x63, 0xb6, 0xef, 0x5e,
	0xc4, 0xab, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x63, 0x66, 0xe8, 0x37, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameFeedServiceClient is the client API for GameFeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameFeedServiceClient interface {
	GameFeed(ctx context.Context, in *GameFeedRequest, opts ...grpc.CallOption) (*GameFeedResponse, error)
}

type gameFeedServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameFeedServiceClient(cc *grpc.ClientConn) GameFeedServiceClient {
	return &gameFeedServiceClient{cc}
}

func (c *gameFeedServiceClient) GameFeed(ctx context.Context, in *GameFeedRequest, opts ...grpc.CallOption) (*GameFeedResponse, error) {
	out := new(GameFeedResponse)
	err := c.cc.Invoke(ctx, "/gamefeed.GameFeedService/GameFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameFeedServiceServer is the server API for GameFeedService service.
type GameFeedServiceServer interface {
	GameFeed(context.Context, *GameFeedRequest) (*GameFeedResponse, error)
}

// UnimplementedGameFeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameFeedServiceServer struct {
}

func (*UnimplementedGameFeedServiceServer) GameFeed(ctx context.Context, req *GameFeedRequest) (*GameFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameFeed not implemented")
}

func RegisterGameFeedServiceServer(s *grpc.Server, srv GameFeedServiceServer) {
	s.RegisterService(&_GameFeedService_serviceDesc, srv)
}

func _GameFeedService_GameFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameFeedServiceServer).GameFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gamefeed.GameFeedService/GameFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameFeedServiceServer).GameFeed(ctx, req.(*GameFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameFeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gamefeed.GameFeedService",
	HandlerType: (*GameFeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameFeed",
			Handler:    _GameFeedService_GameFeed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gamefeed/gamefeedpb/gamefeed.proto",
}
